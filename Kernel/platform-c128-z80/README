Commodore 128 in Z80 mode

Initial bring up code

Disk Images

The image build needs ctools
https://techtinkering.com/articles/transferring-files-to-and-from-cpm-d71-disk-images-using-ctools/

Done (but not tested)
- Boot up from CP/M
- Initialise memory
- Initialise simple 40 column text with our own font
	- FIXME: need to adjust to match VIC rules on locations (or use ROM font and
	  map chars) - does the no $1000 $1800 apply to all banks and does it affect
	  us ?
- Keyboard
- Video
- SD card
- Basic probing of Georam and REU
- Sizing of Georam

To Do
- Sprite pointers and memory
- 80 column video as tty2 ?
- Sizing of REU
- REU and GeoRAM swap
- IEC anything (printer, floppy, different modes)
- Floppy (can we use the CP/M stuff ?)
- Sound
- Joystick
- Video modes on both chips
- Capslock key
- Running 6502 apps 8)
- 640x200 bitmap mode (with/without colour by sizing video)
- VIC video modes
	-	character mode	video 1000 , sprite pointers, font 2k
	-	multicolour character - same but 20 char wide not 40
	-	standard bitmap 320x200 8K + 1K colour data per char square 
	-	multicolourbitmap 160x200 8K
	-	extended background colour mode 1K + font
- Sprite API

Designed to be booted from CP/M.

x128 -8 cpm.system.6228151676.d64 -cartmmcr mmcrbios.bin -mmcrcardimage /tmp/ide.cfa

Memory map
0000-00FF	MMU magic setup
0100-01FF	MMU magic setup
0200-EFFF	Bank 0/1
F000-FFFF	Common
		(Q: can we set up bank 0 common bank 1 video font to hide font)

Kernel
0000-00FF	Zero page (shared ?)
0100-01FF	Ditto (need to look into this and the MMU switching of page 0 and 1)
0200-E3FF	Kernel
E400-E7FF	Console
E800-EFFF	Font
F000-FFFF	Common

User
0000-00FF	Zero page (shared ?)
0100-01FF	User (investigate MMU issue - might have to make sure kenrel
		0100-01FF is only boot discardables)
0200-EFFF	User
F000-FFFF	Common

with graphics flag need to think about VIC video modes and locations


